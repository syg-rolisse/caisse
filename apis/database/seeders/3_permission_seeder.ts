import Permission from '#models/permission'
import { BaseSeeder } from '@adonisjs/lucid/seeders'

export default class PermissionSeeder extends BaseSeeder {
  public async run() {
    // Profil Admin (profilId: 1) - Toutes les permissions à true
    await Permission.create({
      profilId: 1,
      companieId: 1,
      readUser: true,
      readSortie: true,
      createUser: true,
      readDashboard: true,
      updateUser: true,
      deleteUser: true,
      readAppro: true,
      createAppro: true,
      updateAppro: true,
      deleteAppro: true,
      readDepense: true,
      createDepense: true,
      updateDepense: true,
      deleteDepense: true,
      readTypeDeDepense: true,
      createTypeDeDepense: true,
      updateTypeDeDepense: true,
      deleteTypeDeDepense: true,
      rejectDepense: true,
      payeDepense: true,
      bloqueDepense: true,
      dechargeDepense: true,
      readPermission: true,
      updatePermission: true,
    })

    //Profil Utilisateur 1 (profilId: 2) - Seul `createUser` à true
    await Permission.create({
      profilId: 2,
      companieId: 1,
      readUser: true,
      readSortie: true,
      createUser: true,
      readDashboard: true,
      updateUser: true,
      deleteUser: true,
      readAppro: true,
      createAppro: true,
      updateAppro: true,
      deleteAppro: true,
      readDepense: true,
      createDepense: true,
      updateDepense: true,
      deleteDepense: true,
      readTypeDeDepense: true,
      createTypeDeDepense: true,
      updateTypeDeDepense: true,
      deleteTypeDeDepense: true,
      rejectDepense: true,
      payeDepense: true,
      bloqueDepense: true,
      dechargeDepense: true,
      readPermission: true,
      updatePermission: true,
    })

    // Profil Utilisateur 2 (profilId: 3) - Seul `createUser` à true
    await Permission.create({
      profilId: 3,
      companieId: 1,
      readUser: false,
      readSortie: true,
      createUser: true,
      readDashboard: true,
      updateUser: false,
      deleteUser: false,
      readAppro: false,
      createAppro: false,
      updateAppro: false,
      deleteAppro: false,
      readDepense: true,
      createDepense: true,
      updateDepense: true,
      deleteDepense: false,
      readTypeDeDepense: true,
      createTypeDeDepense: false,
      updateTypeDeDepense: false,
      deleteTypeDeDepense: false,
      rejectDepense: true,
      payeDepense: false,
      bloqueDepense: false,
      dechargeDepense: false,
      readPermission: false,
      updatePermission: false,
    })
    await Permission.create({
      profilId: 4,
      companieId: 1,
      readUser: false,
      readSortie: true,
      createUser: true,
      readDashboard: true,
      updateUser: false,
      deleteUser: false,
      readAppro: false,
      createAppro: false,
      updateAppro: false,
      deleteAppro: false,
      readDepense: true,
      createDepense: true,
      updateDepense: true,
      deleteDepense: false,
      readTypeDeDepense: true,
      createTypeDeDepense: false,
      updateTypeDeDepense: false,
      deleteTypeDeDepense: false,
      rejectDepense: true,
      payeDepense: false,
      bloqueDepense: false,
      dechargeDepense: false,
      readPermission: false,
      updatePermission: false,
    })
  }
}
